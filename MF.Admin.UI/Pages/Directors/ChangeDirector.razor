@inject IAdminService AdminService

<div class="d-xl-flex justify-content-center">
    <EditForm Model="@Model" OnValidSubmit="@OnFormSubmit" class="mb-5 border border-1 border-secondary p-2 w-25">
        <DataAnnotationsValidator />
        <h4>@Page Director</h4>
        <div class="mb-3">
            @if (Page.Equals(PageType.Delete))
            {
                <InputText id="Title" class="form-control me-2" @bind-Value="Model.Name" disabled placeholder="Name"></InputText>
            }
            else
            {
                <InputText id="Title" class="form-control me-2" @bind-Value="Model.Name" placeholder="Name"></InputText>
            }
            <ValidationMessage For="@(() => Model.Name)" />
        </div>
        <button type="submit" class="btn btn-@(Page.Equals(PageType.Delete) ? "danger" : "primary")">@Page</button>
    </EditForm>
</div>


@code {
    [Parameter] public DirectorDTO Model { get; set; } = new();
    [Parameter] public string Page { get; set; } = string.Empty;
    [Parameter] public EventCallback<string> OnChange { get; set; }
    List<FilmDirectorDTO> Films { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        Films = await AdminService.GetAsync<FilmDirectorDTO>("films");
    }

    async Task OnFormSubmit()
    {
        try
        {
            if (Page.Equals(PageType.Create))
            {
                DirectorCreateDTO create = new DirectorCreateDTO()
                    {
                        Name = Model.Name
                    };
                await AdminService.CreateAsync<DirectorCreateDTO>("directors", create);
            }
            if (Page.Equals(PageType.Edit))
                await AdminService.EditAsync<DirectorDTO>($"directors/{Model.Id}", Model);
            if (Page.Equals(PageType.Delete))
                await AdminService.DeleteAsync<DirectorDTO>($"directors/{Model.Id}");

            await OnChange.InvokeAsync("");
        }
        catch
        {
            await OnChange.InvokeAsync("Couldn't create/edit/delete the director");
        }

    }
}
